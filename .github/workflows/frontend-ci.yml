name: Frontend deploy Production Deployment CI

on:
  workflow_dispatch:  # 수동 실행을 위한 트리거 추가
    inputs:
      tag:
        description: 'Git Tag to use'
        required: true
        default: 'v0.0.'

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js & Corepack
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'yarn'

      - name: Enable Corepack and Activate Yarn
        run: |
          corepack enable
          corepack prepare yarn@3.8.1 --activate
      
      - name: Restore Yarn cache
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
            .yarn/unplugged
            .yarn/install-state.gz
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build Frontend
        run: yarn build:frontend

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('package.json') }}

      - name: Install TechDocs CLI
        run: npm install -g @techdocs/cli

      - name: Generate TechDocs
        run: techdocs-cli generate --source-dir . --output-dir ./site

      - name: Publish to Azure Blob
        run: |
          techdocs-cli publish \
          --publisher-type azureBlobStorage \
          --storage-name backstage-techdocs \
          --entity default/component/github \
          --azureAccountName kcuflstorageaccount \
          --azureAccountKey ${{ secrets.AZURE_STORAGE_KEY }}
        env:
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./devops/docker/frontend/Dockerfile.dockerbuild
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backstage-frontend:${{ github.event.inputs.tag }}
